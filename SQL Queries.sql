-- SALES ANALYSIS by COUNTRIES
SELECT CU.COUNTRY,
	COUNT(ORDER_ID) AS ORDER_COUNT
FROM CUSTOMERS AS CU
LEFT JOIN ORDERS AS O ON O.CUSTOMER_ID = CU.CUSTOMER_ID
GROUP BY 1
ORDER BY ORDER_COUNT DESC


-- TOP CUSTOMERS
SELECT CU.COMPANY_NAME,
	CU.CUSTOMER_ID,
	COUNT(ORDER_ID) AS ORDER_COUNT
FROM CUSTOMERS AS CU
LEFT JOIN ORDERS AS O ON O.CUSTOMER_ID = CU.CUSTOMER_ID
GROUP BY 1,2
ORDER BY ORDER_COUNT DESC


-- TOTAL SALES PER YEAR
WITH DATA AS
	(SELECT ORDER_DATE,
			ORDER_ID,
			CASE
							WHEN ORDER_DATE >= '1996-07-04'
												AND ORDER_DATE < '1997-01-01' THEN '1996-1997'
							WHEN ORDER_DATE >= '1997-01-01'
												AND ORDER_DATE < '1998-01-01' THEN '1997-1998'
							WHEN ORDER_DATE >= '1998-01-01'
												AND ORDER_DATE < '1998-05-06' THEN '1998-1998'
			END AS YEARS
		FROM ORDERS)
SELECT YEARS,
	COUNT(ORDER_ID) OVER (PARTITION BY YEARS) AS ORDERS_BY_YEARS
FROM DATA

--PRODUCT ANALYSIS (TOP PRODUCTS)
SELECT PR.PRODUCT_ID,
	PR.PRODUCT_NAME,
	PR.REORDER_LEVEL,
	COUNT(ORDER_ID) AS ORDER_COUNT
FROM PRODUCTS AS PR
LEFT JOIN ORDER_DETAILS AS OD ON OD.PRODUCT_ID = PR.PRODUCT_ID
GROUP BY 1,2
ORDER BY ORDER_COUNT DESC

-- DISCOUNT RATE PER PRODUCT
SELECT PR.PRODUCT_ID,
	PR.PRODUCT_NAME,
	OD.DISCOUNT,
	O.ORDER_ID
FROM PRODUCTS AS PR
LEFT JOIN ORDER_DETAILS AS OD ON OD.PRODUCT_ID = PR.PRODUCT_ID
LEFT JOIN ORDERS AS O ON O.ORDER_ID = OD.ORDER_ID
GROUP BY 1,2,
	3,4
ORDER BY OD.DISCOUNT DESC

--EMPLOYEE ANALYSIS
--EMPLOYEE NUMBER PER DEPARTMENT
SELECT FIRST_NAME,
	LAST_NAME,
	TITLE,
	EMPLOYEE_ID,
	COUNT(EMPLOYEE_ID) OVER (PARTITION BY TITLE) AS EMPLOYEE_COUNT
FROM EMPLOYEES
GROUP BY 1,2,
	3,4


--PERFORMANCE ANALYSIS (EMPLOYEE)

WITH DATA AS
	(SELECT ORDER_DATE,
			ORDER_ID,
			O.EMPLOYEE_ID,
			E.FIRST_NAME,
			E.LAST_NAME,
			E.TITLE,
			CASE
							WHEN ORDER_DATE >= '1996-07-04'
												AND ORDER_DATE < '1997-01-01' THEN '1996-1997'
							WHEN ORDER_DATE >= '1997-01-01'
												AND ORDER_DATE < '1998-01-01' THEN '1997-1998'
							WHEN ORDER_DATE >= '1998-01-01'
												AND ORDER_DATE < '1998-05-06' THEN '1998-1998'
			END AS YEARS
		FROM ORDERS AS O
		LEFT JOIN EMPLOYEES AS E ON E.EMPLOYEE_ID = O.EMPLOYEE_ID)
SELECT EMPLOYEE_ID,
	YEARS,
	ORDER_ID,
	COUNT(ORDER_ID) OVER (PARTITION BY EMPLOYEE_ID) AS PERSONEL_ORDER_BY_YEAR
FROM DATA
GROUP BY 1,2,
	3

--EMPLOYEE KPI
WITH PERFORMANCE AS
	(SELECT CONCAT(E.FIRST_NAME,

										' ',
										E.LAST_NAME) AS EMPLOYEE_FULL_NAME,
			E.TITLE AS POSITION_OF_EMPLOYEE,
			COUNT(DISTINCT OD.ORDER_ID) AS TOTAL_ORDERS,
			ROUND(SUM(OD.UNIT_PRICE * OD.QUANTITY):: NUMERIC,
				2) AS TOTAL_PRICE,
			ROUND(SUM(OD.DISCOUNT * (OD.QUANTITY * OD.UNIT_PRICE)):: NUMERIC,
				2) AS DISCOUNT_AMOUNT,
			ROUND(SUM((OD.QUANTITY * OD.UNIT_PRICE) - OD.DISCOUNT * (OD.QUANTITY * OD.UNIT_PRICE)):: NUMERIC,
				2) AS TOTAL_PRICE_AFTER_DISCOUNT
		FROM EMPLOYEES AS E
		LEFT JOIN ORDERS AS O ON E.EMPLOYEE_ID = O.EMPLOYEE_ID
		LEFT JOIN ORDER_DETAILS AS OD ON O.ORDER_ID = OD.ORDER_ID
		GROUP BY 1,2)
SELECT EMPLOYEE_FULL_NAME,
	POSITION_OF_EMPLOYEE,
	TOTAL_ORDERS,
	TOTAL_PRICE,
	DISCOUNT_AMOUNT,
	TOTAL_PRICE_AFTER_DISCOUNT,
	ROUND(((TOTAL_PRICE - TOTAL_PRICE_AFTER_DISCOUNT) / TOTAL_PRICE) * 100:: NUMERIC,
		2) AS DISCOUNT_PERCENTAGE
FROM PERFORMANCE
GROUP BY 1,2,
	3,4,
	5,6

--EMPLOYEES' SALE NUMBERS
SELECT O.EMPLOYEE_ID,
	CONCAT(E.FIRST_NAME,

		' ',
		E.LAST_NAME) AS EMPLOYEE_FULL_NAME,
	E.TITLE,
	COUNT(DISTINCT O.ORDER_ID) AS ORDER_COUNT
FROM ORDERS AS O
LEFT JOIN EMPLOYEES AS E ON E.EMPLOYEE_ID = O.EMPLOYEE_ID
GROUP BY 1,2,
	3

-- PRICE CHANGE ANALYSIS
WITH DISCOUNT AS
	(SELECT OD.PRODUCT_ID,
			PR.PRODUCT_NAME,
			ROUND(LEAD(OD.UNIT_PRICE) OVER (PARTITION BY PR.PRODUCT_NAME
																																			ORDER BY O.ORDER_DATE)::NUMERIC,

					2) AS CURRENT_PRICE,
			ROUND(LAG(OD.UNIT_PRICE) OVER (PARTITION BY PR.PRODUCT_NAME
																																		ORDER BY O.ORDER_DATE)::NUMERIC,

						2) AS OLD_PRICE
		FROM PRODUCTS AS PR
		LEFT JOIN ORDER_DETAILS AS OD ON PR.PRODUCT_ID = OD.PRODUCT_ID
		LEFT JOIN ORDERS AS O ON O.ORDER_ID = OD.ORDER_ID)
SELECT D.PRODUCT_ID,
	D.PRODUCT_NAME,
	D.CURRENT_PRICE,
	D.OLD_PRICE,
	ROUND((D.CURRENT_PRICE - D.OLD_PRICE) / D.OLD_PRICE * 100) AS PRICE_CHANGE_PERCENTAGE
FROM DISCOUNT AS D
INNER JOIN ORDER_DETAILS AS OD ON D.PRODUCT_ID = OD.PRODUCT_ID
WHERE D.CURRENT_PRICE != D.OLD_PRICE
GROUP BY 1,2,
	3,4

-- UNIT STOCK NUMBERS PER CATEGORY
SELECT CT.CATEGORY_NAME,
	SUM(PR.UNIT_IN_STOCK) AS UNIT_STOCK
FROM PRODUCTS AS PR
LEFT JOIN CATEGORIES AS CT ON CT.CATEGORY_ID = PR.CATEGORY_ID
GROUP BY 1

-- PRODUCT PRICES BETWEEN 20 AND 60 DOLLARS
SELECT PRODUCT_NAME,
	UNIT_PRICE
FROM PRODUCTS
WHERE UNIT_PRICE BETWEEN 20 AND 60
ORDER BY UNIT_PRICE DESC

